{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOAsG4WzzOTK1iXvFJP3f8Y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qJ-XXhsf8Rv2","executionInfo":{"status":"ok","timestamp":1721738285565,"user_tz":-180,"elapsed":581,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"590dde65-1d1a-49e9-ece5-21932fbb89e1"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[50 45 56 78]\n"," [78 89 59 90]\n"," [89 78 69 70]\n"," [67 69 89 70]\n"," [90 89 80 84]\n"," [89 59 90 78]]\n"]}],"source":["import numpy as np\n","weights = np.array([[50, 45, 56, 78],[78, 89, 59, 90],[89, 78, 69, 70],[67, 69, 89, 70],[90,89, 80, 84],[89, 59, 90, 78]])\n","print(weights)"]},{"cell_type":"code","source":["weights = weights.size\n","print(weights)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5WzruGBN9EmE","executionInfo":{"status":"ok","timestamp":1721324860277,"user_tz":-180,"elapsed":504,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"1d983d81-34d5-4c8a-839f-ca614e70c7dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["24\n"]}]},{"cell_type":"code","source":["# convert into three dimens\n","weights = weights.reshape((2, 2, 6))\n","print(weights)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNYWIgPs8z2b","executionInfo":{"status":"ok","timestamp":1721325452458,"user_tz":-180,"elapsed":685,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"001ea2d4-1c00-45ad-9b5b-8d559ced26fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[50 45 56 78 78 89]\n","  [59 90 89 78 69 70]]\n","\n"," [[67 69 89 70 90 89]\n","  [80 84 89 59 90 78]]]\n"]}]},{"cell_type":"code","source":["weights = weights.reshape((2, 6, 2))\n","print(weights)\n","weights.shape\n","print(f\"weights.shape: {weights.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cC1w2Fsa_h7u","executionInfo":{"status":"ok","timestamp":1721325848833,"user_tz":-180,"elapsed":500,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"9ef318f4-cb09-43a6-b768-8e01000fd7a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[50 45]\n","  [56 78]\n","  [78 89]\n","  [59 90]\n","  [89 78]\n","  [69 70]]\n","\n"," [[67 69]\n","  [89 70]\n","  [90 89]\n","  [80 84]\n","  [89 59]\n","  [90 78]]]\n","weights.shape: (2, 6, 2)\n"]}]},{"cell_type":"code","source":["weights"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GMEk5rNoBB2V","executionInfo":{"status":"ok","timestamp":1721325872707,"user_tz":-180,"elapsed":469,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"04263db6-f080-4828-aee2-9c3cab8ee359"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[50, 45],\n","        [56, 78],\n","        [78, 89],\n","        [59, 90],\n","        [89, 78],\n","        [69, 70]],\n","\n","       [[67, 69],\n","        [89, 70],\n","        [90, 89],\n","        [80, 84],\n","        [89, 59],\n","        [90, 78]]])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["weights_flattened = weights.flatten()\n","print(weights_flattened)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pupWd1iqBHH5","executionInfo":{"status":"ok","timestamp":1721325889756,"user_tz":-180,"elapsed":480,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"033a8633-ff0e-4e94-b5fc-781524ad0afd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[50 45 56 78 78 89 59 90 89 78 69 70 67 69 89 70 90 89 80 84 89 59 90 78]\n"]}]},{"cell_type":"code","source":["weights[:2, ::2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p_A2zzNQBbWF","executionInfo":{"status":"ok","timestamp":1721325988156,"user_tz":-180,"elapsed":10,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"39726afb-e1e0-4e05-ca4b-25a1acc33c22"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[50, 45],\n","        [78, 89],\n","        [89, 78]],\n","\n","       [[67, 69],\n","        [90, 89],\n","        [89, 59]]])"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["# n.p zero array()"],"metadata":{"id":"k4BW3WVj7kO0"}},{"cell_type":"code","source":["import numpy as np\n","x = np.zeros(shape = (2, 3), dtype = 'int8')\n","print(\"array:\", x)\n","print(\"shape:\", x.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LTW0IWMG7rBB","executionInfo":{"status":"ok","timestamp":1721439289457,"user_tz":-180,"elapsed":3,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"c49cf04a-0235-4ef0-dd6c-266280d9f0d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["array: [[0 0 0]\n"," [0 0 0]]\n","shape: (2, 3)\n"]}]},{"cell_type":"markdown","source":["#w3 exercises on arrays"],"metadata":{"id":"xzndR5Z6xyDg"}},{"cell_type":"code","source":["# checking the numpy version\n","print(np.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2oyb0z_Dx5hw","executionInfo":{"status":"ok","timestamp":1721439357498,"user_tz":-180,"elapsed":354,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"8211780f-0f68-4f23-f0a8-d89f4fee1073"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.25.2\n"]}]},{"cell_type":"code","source":["#Write a NumPy program to convert a list of numeric values into a one-dimensional NumPy array.\n","list1 = [1, 2, 2, 4, 5]\n","print(\"1dim numPy array:\", np.array(list1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ir9pTp6cyBsi","executionInfo":{"status":"ok","timestamp":1721439554844,"user_tz":-180,"elapsed":380,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"978f72ab-7c60-4739-a2c8-30b7f9bfec97"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1dim numPy array: [1 2 2 4 5]\n"]}]},{"cell_type":"code","source":["#Write a NumPy program to create a 3x3 matrix with values ranging from 2 to 10.\n","v = np.arange(2, 11) .reshape(3, 3)\n","print(v)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O35CR8ury8NJ","executionInfo":{"status":"ok","timestamp":1721439975984,"user_tz":-180,"elapsed":383,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"2f1eb6a1-7b3e-4d70-983d-9dd919e8797a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 2  3  4]\n"," [ 5  6  7]\n"," [ 8  9 10]]\n"]}]},{"cell_type":"code","source":["# Write a NumPy program to create a null vector of size 10 and update the sixth value to 11\n","x = np.zeros(10)\n","print(\"Original x value: \", x)\n","x[6] = 11\n","print(\"Updated x value: \", x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z7t44UOj0cxo","executionInfo":{"status":"ok","timestamp":1721440452848,"user_tz":-180,"elapsed":378,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"d3883adb-e60e-48ab-ae0f-3164523143f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original x value:  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n","Updated x value:  [ 0.  0.  0.  0.  0.  0. 11.  0.  0.  0.]\n"]}]},{"cell_type":"code","source":["# Write a NumPy program to create an array with values ranging from 12 to 38.\n","array1 = np.arange(12, 38)\n","print(\"array 1:\", array1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"25rp6tuO2TqG","executionInfo":{"status":"ok","timestamp":1721440684341,"user_tz":-180,"elapsed":538,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"130e29e4-4944-4c6f-f887-de656b08f3bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["array 1: [12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35\n"," 36 37]\n"]}]},{"cell_type":"code","source":["# Write a NumPy program to reverse an array (the first element becomes the last)\n","Original_array = np.arange(12, 38)\n","print(\"Original array:\", Original_array)\n","Reverse_array = Original_array[::-1]\n","print(\"Reverse array:\", Reverse_array)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iG3MWDQa3a0i","executionInfo":{"status":"ok","timestamp":1721440870701,"user_tz":-180,"elapsed":381,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"46a29c1d-4a19-4cfc-e46e-5dfae4072b1f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original array: [12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35\n"," 36 37]\n","Reverse array: [37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14\n"," 13 12]\n"]}]},{"cell_type":"code","source":["# Write a NumPy program to convert an array to a floating type\n","arr = np.array([1, 2, 3, 4])\n","print(\"Original array:\", arr)\n","new_arr = arr.astype('float')\n","print(\"New array:\", new_arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lBChYFXt6xlf","executionInfo":{"status":"ok","timestamp":1721441860452,"user_tz":-180,"elapsed":437,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"ee4eb10d-8b50-48fd-b861-4754a84f0ca4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original array: [1 2 3 4]\n","New array: [1. 2. 3. 4.]\n"]}]},{"cell_type":"code","source":["arr2 = np.array([5, 5, 6, 6, 7])\n","print(arr2)\n","reverse_arr2 = arr2[::-1]\n","print(reverse_arr2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WCdKTn7J8ubI","executionInfo":{"status":"ok","timestamp":1721442254419,"user_tz":-180,"elapsed":397,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"c23f7e3d-30ac-46f2-e150-ec8632de92ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 5 6 6 7]\n","[7 6 6 5 5]\n"]}]},{"cell_type":"code","source":["arr2= np.array([5, 5, 6, 6, 7])\n","print(arr2, \"arr2\")\n","new_arr2 = arr2.astype('float')\n","print(new_arr2, \"new_arr2\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jtLewasP9FkU","executionInfo":{"status":"ok","timestamp":1721442579897,"user_tz":-180,"elapsed":406,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"246c65f8-f577-4370-b780-fdbfb96517d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 5 6 6 7] arr2\n","[5. 5. 6. 6. 7.] new_arr2\n"]}]},{"cell_type":"code","source":["# Write a NumPy program to create a 2D array with 1 on the border and 0 inside\n","s = np.ones((5, 5))\n","print (\"original:\", s)\n","s[1:-1, 1:-1] = 0\n","print(\"updated s\", s)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U7tjfD9A-TZX","executionInfo":{"status":"ok","timestamp":1721443427732,"user_tz":-180,"elapsed":383,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"1762bc99-e677-4148-fcec-2e921d9f687f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["original: [[1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]]\n","updated s [[1. 1. 1. 1. 1.]\n"," [1. 0. 0. 0. 1.]\n"," [1. 0. 0. 0. 1.]\n"," [1. 0. 0. 0. 1.]\n"," [1. 1. 1. 1. 1.]]\n"]}]},{"cell_type":"code","source":["#Write a NumPy program to add a border (filled with 0's) around an existing array.\n","w = np.ones((5, 5))\n","print(\"Original array:\")\n","print(w)\n","w = np.pad(w, pad_width=1, mode='constant', constant_values=0)\n","print(\"Updated array:\")\n","print(w)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2KY0yoawGkdx","executionInfo":{"status":"ok","timestamp":1721444788638,"user_tz":-180,"elapsed":383,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"243f42e6-1136-4d47-e3fd-182ca2884821"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original array:\n","[[1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]]\n","Updated array:\n","[[0. 0. 0. 0. 0. 0. 0.]\n"," [0. 1. 1. 1. 1. 1. 0.]\n"," [0. 1. 1. 1. 1. 1. 0.]\n"," [0. 1. 1. 1. 1. 1. 0.]\n"," [0. 1. 1. 1. 1. 1. 0.]\n"," [0. 1. 1. 1. 1. 1. 0.]\n"," [0. 0. 0. 0. 0. 0. 0.]]\n"]}]},{"cell_type":"code","source":["# providing a border in the given array.\n","annette = np.ones((2, 5))\n","print(\"original annette\")\n","print(annette)\n","annette = np.pad(annette, pad_width = 1, mode = 'constant', constant_values = 0)\n","print(\"updated annette\")\n","print(annette)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DQzqoWnnKVUr","executionInfo":{"status":"ok","timestamp":1721445909030,"user_tz":-180,"elapsed":370,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"f9d6024d-ce3b-4698-bd07-f8d86b107477"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["original annette\n","[[1. 1. 1. 1. 1.]\n"," [1. 1. 1. 1. 1.]]\n","updated annette\n","[[0. 0. 0. 0. 0. 0. 0.]\n"," [0. 1. 1. 1. 1. 1. 0.]\n"," [0. 1. 1. 1. 1. 1. 0.]\n"," [0. 0. 0. 0. 0. 0. 0.]]\n"]}]},{"cell_type":"code","source":["#Write a NumPy program to create an 8x8 matrix and fill it with a checkerboard pattern\n","print(\"Checkerboard pattern:\")\n","x = np.zeros((8, 8), dtype=int)\n","x[1::2, ::2] = 1\n","x[::2, 1::2] = 1\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4ZNtDh-ZOpTd","executionInfo":{"status":"ok","timestamp":1721447587712,"user_tz":-180,"elapsed":458,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"4c96c40c-e994-4032-cb13-06b77bd36d34"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Checkerboard pattern:\n","[[0 1 0 1 0 1 0 1]\n"," [1 0 1 0 1 0 1 0]\n"," [0 1 0 1 0 1 0 1]\n"," [1 0 1 0 1 0 1 0]\n"," [0 1 0 1 0 1 0 1]\n"," [1 0 1 0 1 0 1 0]\n"," [0 1 0 1 0 1 0 1]\n"," [1 0 1 0 1 0 1 0]]\n"]}]},{"cell_type":"code","source":["#Write a NumPy program to convert a list and tuple into arrays.\n","list1 = [1, 2, 3, 4, 5]\n","arr_list1 = np.array(list1)\n","print(\"arr_list1\")\n","print(arr_list1)\n","tuple1 = (1, 2, 3, 4, 5)\n","arr_tuple1 = np.array(tuple1)\n","print(\"arr_tuple1\")\n","print(arr_tuple1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zvVSLqn2RZ7e","executionInfo":{"status":"ok","timestamp":1721451542166,"user_tz":-180,"elapsed":396,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"7503456e-e18c-4cd7-8b65-8e8dc970ffb1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["arr_list1\n","[1 2 3 4 5]\n","arr_tuple1\n","[1 2 3 4 5]\n"]}]},{"cell_type":"code","source":["# Write a NumPy program to append values to the end of an array.\n","original_array = np.array([10, 20, 30])\n","print (\"original array:\")\n","print (original_array)\n","original_array = np.append(original_array, [[40, 50, 60], [70, 80, 90]])\n","print (\"append array: \")\n","print (original_array)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OXdzYhKhSlXw","executionInfo":{"status":"ok","timestamp":1721448349447,"user_tz":-180,"elapsed":441,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"26d61204-e9de-4c17-d552-dab5db744d30"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["original array:\n","[10 20 30]\n","append array: \n","[10 20 30 40 50 60 70 80 90]\n"]}]},{"cell_type":"code","source":["#Write a NumPy program to create an empty and full array\n","x = np.empty((3, 4))\n","print(\"x\")\n","print(x)\n","y = np.full((3,3), 6)\n","print(\"y\")\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5G9XVpI0WFyp","executionInfo":{"status":"ok","timestamp":1721449949852,"user_tz":-180,"elapsed":385,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"09c10faf-a07d-4a1d-c05a-9755033b638d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x\n","[[3.e-323 3.e-323 3.e-323 3.e-323]\n"," [3.e-323 3.e-323 3.e-323 3.e-323]\n"," [3.e-323 3.e-323 3.e-323 3.e-323]]\n","y\n","[[6 6 6]\n"," [6 6 6]\n"," [6 6 6]]\n"]}]},{"cell_type":"code","source":["import numpy as np\n","x = np.ones((3,4))\n","y = np.random.random((5,1,4))"],"metadata":{"id":"WAZIR-qYlQKp","executionInfo":{"status":"ok","timestamp":1721758847782,"user_tz":-180,"elapsed":390,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["print(\"x:\", x)\n","\n","print(\"y:\", y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tpUIU-F6nVUJ","executionInfo":{"status":"ok","timestamp":1721738590359,"user_tz":-180,"elapsed":476,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"90fd0a23-c0de-4aac-e3bc-d1cdb5e4b883"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x: [[1. 1. 1. 1.]\n"," [1. 1. 1. 1.]\n"," [1. 1. 1. 1.]]\n","y: [[[0.86241669 0.65229107 0.66234958 0.55461828]]\n","\n"," [[0.56754563 0.54416704 0.48733366 0.14368529]]\n","\n"," [[0.59924016 0.92787623 0.04858373 0.60276123]]\n","\n"," [[0.04874426 0.66675822 0.14455507 0.84423935]]\n","\n"," [[0.50238717 0.03091013 0.75366191 0.17182341]]]\n"]}]},{"cell_type":"code","source":["z = x+y\n","print(z)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1qYXnVTOlV77","executionInfo":{"status":"ok","timestamp":1721738538854,"user_tz":-180,"elapsed":415,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"e294239c-d657-4dec-8dc7-c0dbb4be6cfe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[1.86241669 1.65229107 1.66234958 1.55461828]\n","  [1.86241669 1.65229107 1.66234958 1.55461828]\n","  [1.86241669 1.65229107 1.66234958 1.55461828]]\n","\n"," [[1.56754563 1.54416704 1.48733366 1.14368529]\n","  [1.56754563 1.54416704 1.48733366 1.14368529]\n","  [1.56754563 1.54416704 1.48733366 1.14368529]]\n","\n"," [[1.59924016 1.92787623 1.04858373 1.60276123]\n","  [1.59924016 1.92787623 1.04858373 1.60276123]\n","  [1.59924016 1.92787623 1.04858373 1.60276123]]\n","\n"," [[1.04874426 1.66675822 1.14455507 1.84423935]\n","  [1.04874426 1.66675822 1.14455507 1.84423935]\n","  [1.04874426 1.66675822 1.14455507 1.84423935]]\n","\n"," [[1.50238717 1.03091013 1.75366191 1.17182341]\n","  [1.50238717 1.03091013 1.75366191 1.17182341]\n","  [1.50238717 1.03091013 1.75366191 1.17182341]]]\n"]}]},{"cell_type":"code","source":["a = np.array([[14, 15, 18],\n","    [62, 90, 98],\n","    [71, 73, 90],\n","    [40, 24, 17],\n","    [11, 81, 14],\n","    [26, 81, 31]])\n","\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QL2Cyua4nwoA","executionInfo":{"status":"ok","timestamp":1721739324499,"user_tz":-180,"elapsed":519,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"d1ca7283-685a-4115-f5ff-bd4f626498ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[14, 15, 18],\n","       [62, 90, 98],\n","       [71, 73, 90],\n","       [40, 24, 17],\n","       [11, 81, 14],\n","       [26, 81, 31]])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["b = np.array([[24,  40,  58],\n","    [72, 115, 138],\n","    [81,  98, 130],\n","    [50,  49,  57],\n","    [21, 106,  54],\n","    [36, 106,  71]])\n","b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zp7i-w9Sn04H","executionInfo":{"status":"ok","timestamp":1721739302199,"user_tz":-180,"elapsed":472,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"d8c1c6b2-afa5-4f14-ce02-a45618ef13e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 24,  40,  58],\n","       [ 72, 115, 138],\n","       [ 81,  98, 130],\n","       [ 50,  49,  57],\n","       [ 21, 106,  54],\n","       [ 36, 106,  71]])"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["c = b - a\n","b = c + a\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8aqZDxNtn5MS","executionInfo":{"status":"ok","timestamp":1721743592977,"user_tz":-180,"elapsed":1554,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"e8ae7315-888f-4108-a9fa-e9a1d61c59d3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[10 25 40]\n"," [10 25 40]\n"," [10 25 40]\n"," [10 25 40]\n"," [10 25 40]\n"," [10 25 40]]\n"]}]},{"cell_type":"markdown","source":["# matrix multipliation."],"metadata":{"id":"Hrj0v3gY6iVB"}},{"cell_type":"code","source":["A = np.array([[1,1,8],[0,1,9],[9,0,8]])\n","print(\"Matrix A:\\n\", A, '\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jv61QPcJ6mBT","executionInfo":{"status":"ok","timestamp":1721759311011,"user_tz":-180,"elapsed":379,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"26a0dc9a-1391-4da3-efd2-f673197df0c3"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Matrix A:\n"," [[1 1 8]\n"," [0 1 9]\n"," [9 0 8]] \n","\n"]}]},{"cell_type":"code","source":["B = np.array([[2,0,0],[3,4,9],[7,8,9]])\n","print('MATRIX B:\\n', B, '\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h3wgLa_B6qAJ","executionInfo":{"status":"ok","timestamp":1721759314058,"user_tz":-180,"elapsed":374,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"7b0cb6e5-399a-4ee1-c80d-94645efd9d9a"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["MATRIX B:\n"," [[2 0 0]\n"," [3 4 9]\n"," [7 8 9]] \n","\n"]}]},{"cell_type":"code","source":["print(\"Element wise multiplication:\\n\", A*B, '\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2jcO9GXL6yK-","executionInfo":{"status":"ok","timestamp":1721759316263,"user_tz":-180,"elapsed":385,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"9a2bcedb-2413-4b00-c7f8-a53082afabf9"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Element wise multiplication:\n"," [[ 2  0  0]\n"," [ 0  4 81]\n"," [63  0 72]] \n","\n"]}]},{"cell_type":"code","source":["print(\"Matrix product:\\n\", A@B, '\\n') # matrix A = (2 ,3) , matrix B= (3,4), output matrix =( 2,4)\n","print(\"Dot product:\\n\", A.dot(B), '\\n')"],"metadata":{"id":"8My_RlqK948k","executionInfo":{"status":"ok","timestamp":1721759317909,"user_tz":-180,"elapsed":2,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"5ef6333f-fc1a-4e91-908f-f45cb17d41ce","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Matrix product:\n"," [[61 68 81]\n"," [66 76 90]\n"," [74 64 72]] \n","\n","Dot product:\n"," [[61 68 81]\n"," [66 76 90]\n"," [74 64 72]] \n","\n"]}]},{"cell_type":"code","source":["import numpy as np\n","a = np.zeros(5)\n","b = np.arange (0, 10, 2)\n","c = a + b\n","print(c[4])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BSQmQ-i_0UFf","executionInfo":{"status":"ok","timestamp":1721758966666,"user_tz":-180,"elapsed":346,"user":{"displayName":"Annette Wairimu","userId":"06274177541111823326"}},"outputId":"960c0a33-a2b0-4150-9664-c45380c135b0"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["8.0\n"]}]}]}